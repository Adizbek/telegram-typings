/**
 * This object represents an incoming update.At most one of the optional
 * parameters can be present in any givenupdate.
 */
export type Update = {};

/**
 * Contains information about the current status of awebhook.
 */
export type WebhookInfo = {};

/**
 * This object represents a Telegram user orbot.
 */
export type User = {};

/**
 * This object represents achat.
 */
export type Chat = {};

/**
 * This object represents amessage.
 */
export type Message = {};

/**
 * This object represents one special entity in a text message. For
 * example, hashtags, usernames, URLs, etc.
 */
export type MessageEntity = {};

/**
 * This object represents one size of a photo or a file / stickerthumbnail.
 */
export type PhotoSize = {};

/**
 * This object represents an audio file to be treated as music by the
 * Telegramclients.
 */
export type Audio = {};

/**
 * This object represents a general file (as opposed to photos, voice
 * messages and audiofiles).
 */
export type Document = {};

/**
 * This object represents a videofile.
 */
export type Video = {};

/**
 * This object represents a voicenote.
 */
export type Voice = {};

/**
 * This object represents a video message (available in Telegram apps as ofv.4.0).
 */
export type VideoNote = {};

/**
 * This object represents a phonecontact.
 */
export type Contact = {};

/**
 * This object represents a point on themap.
 */
export type Location = {};

/**
 * This object represents avenue.
 */
export type Venue = {};

/**
 * This object represent a user's profilepictures.
 */
export type UserProfilePhotos = {};

/**
 * This object represents a file ready to be downloaded. The file can be
 * downloaded via the link
 * https://api.telegram.org/file/bot<token>/<file_path>. It is guaranteed
 * that the link will be valid for at least 1 hour. When the link expires,
 * a new one can be requested by callinggetFile.
 */
export type File = {};

/**
 * This object represents a custom keyboard with reply options (see
 * Introduction to bots for details andexamples).
 */
export type ReplyKeyboardMarkup = {};

/**
 * This object represents one button of the reply keyboard. For simple text
 * buttons String can be used instead of this object to specify text of the
 * button. Optional fields are mutuallyexclusive.
 */
export type KeyboardButton = {};

/**
 * Upon receiving a message with this object, Telegram clients will remove
 * the current custom keyboard and display the default letter-keyboard. By
 * default, custom keyboards are displayed until a new keyboard is sent by
 * a bot. An exception is made for one-time keyboards that are hidden
 * immediately after the user presses a button (seeReplyKeyboardMarkup).
 */
export type ReplyKeyboardRemove = {};

/**
 * This object represents an inline keyboard that appears right next to the
 * message it belongsto.
 */
export type InlineKeyboardMarkup = {};

/**
 * This object represents one button of an inline keyboard. You must use
 * exactly one of the optionalfields.
 */
export type InlineKeyboardButton = {};

/**
 * This object represents an incoming callback query from a callback button
 * in an inline keyboard. If the button that originated the query was
 * attached to a message sent by the bot, the field message will be
 * present. If the button was attached to a message sent via the bot (in
 * inline mode), the field inline_message_id will be present. Exactly one
 * of the fields data or game_short_name will bepresent.
 */
export type CallbackQuery = {};

/**
 * Upon receiving a message with this object, Telegram clients will display
 * a reply interface to the user (act as if the user has selected the bot‘s
 * message and tapped ’Reply'). This can be extremely useful if you want to
 * create user-friendly step-by-step interfaces without having to sacrifice
 * privacymode.
 */
export type ForceReply = {};

/**
 * This object represents a chatphoto.
 */
export type ChatPhoto = {};

/**
 * This object contains information about one member of achat.
 */
export type ChatMember = {};

/**
 * Contains information about why a request wasunsuccessful.
 */
export type ResponseParameters = {};

/**
 * Represents a photo to besent.
 */
export type InputMediaPhoto = {};

/**
 * Represents a video to besent.
 */
export type InputMediaVideo = {};

/**
 * This object represents asticker.
 */
export type Sticker = {};

/**
 * This object represents a stickerset.
 */
export type StickerSet = {};

/**
 * This object describes the position on faces where a mask should be
 * placed bydefault.
 */
export type MaskPosition = {};

/**
 * This object represents an incoming inline query. When the user sends an
 * empty query, your bot could return some default or trendingresults.
 */
export type InlineQuery = {};

/**
 * Represents a link to an article or webpage.
 */
export type InlineQueryResultArticle = {};

/**
 * Represents a link to a photo. By default, this photo will be sent by the
 * user with optional caption. Alternatively, you can use
 * input_message_content to send a message with the specified content
 * instead of thephoto.
 */
export type InlineQueryResultPhoto = {};

/**
 * Represents a link to an animated GIF file. By default, this animated GIF
 * file will be sent by the user with optional caption. Alternatively, you
 * can use input_message_content to send a message with the specified
 * content instead of theanimation.
 */
export type InlineQueryResultGif = {};

/**
 * Represents a link to a video animation (H.264/MPEG-4 AVC video without
 * sound). By default, this animated MPEG-4 file will be sent by the user
 * with optional caption. Alternatively, you can use input_message_content
 * to send a message with the specified content instead of theanimation.
 */
export type InlineQueryResultMpeg4Gif = {};

/**
 * Represents a link to a page containing an embedded video player or a
 * video file. By default, this video file will be sent by the user with an
 * optional caption. Alternatively, you can use input_message_content to
 * send a message with the specified content instead of thevideo.
 */
export type InlineQueryResultVideo = {};

/**
 * Represents a link to an mp3 audio file. By default, this audio file will
 * be sent by the user. Alternatively, you can use input_message_content to
 * send a message with the specified content instead of theaudio.
 */
export type InlineQueryResultAudio = {};

/**
 * Represents a link to a voice recording in an .ogg container encoded with
 * OPUS. By default, this voice recording will be sent by the user.
 * Alternatively, you can use input_message_content to send a message with
 * the specified content instead of the the voicemessage.
 */
export type InlineQueryResultVoice = {};

/**
 * Represents a link to a file. By default, this file will be sent by the
 * user with an optional caption. Alternatively, you can use
 * input_message_content to send a message with the specified content
 * instead of the file. Currently, only .PDF and .ZIP files can be sent
 * using thismethod.
 */
export type InlineQueryResultDocument = {};

/**
 * Represents a location on a map. By default, the location will be sent by
 * the user. Alternatively, you can use input_message_content to send a
 * message with the specified content instead of thelocation.
 */
export type InlineQueryResultLocation = {};

/**
 * Represents a venue. By default, the venue will be sent by the user.
 * Alternatively, you can use input_message_content to send a message with
 * the specified content instead of thevenue.
 */
export type InlineQueryResultVenue = {};

/**
 * Represents a contact with a phone number. By default, this contact will
 * be sent by the user. Alternatively, you can use input_message_content to
 * send a message with the specified content instead of thecontact.
 */
export type InlineQueryResultContact = {};

/**
 * Represents aGame.
 */
export type InlineQueryResultGame = {};

/**
 * Represents a link to a photo stored on the Telegram servers. By default,
 * this photo will be sent by the user with an optional caption.
 * Alternatively, you can use input_message_content to send a message with
 * the specified content instead of thephoto.
 */
export type InlineQueryResultCachedPhoto = {};

/**
 * Represents a link to an animated GIF file stored on the Telegram
 * servers. By default, this animated GIF file will be sent by the user
 * with an optional caption. Alternatively, you can use
 * input_message_content to send a message with specified content instead
 * of theanimation.
 */
export type InlineQueryResultCachedGif = {};

/**
 * Represents a link to a video animation (H.264/MPEG-4 AVC video without
 * sound) stored on the Telegram servers. By default, this animated MPEG-4
 * file will be sent by the user with an optional caption. Alternatively,
 * you can use input_message_content to send a message with the specified
 * content instead of theanimation.
 */
export type InlineQueryResultCachedMpeg4Gif = {};

/**
 * Represents a link to a sticker stored on the Telegram servers. By
 * default, this sticker will be sent by the user. Alternatively, you can
 * use input_message_content to send a message with the specified content
 * instead of thesticker.
 */
export type InlineQueryResultCachedSticker = {};

/**
 * Represents a link to a file stored on the Telegram servers. By default,
 * this file will be sent by the user with an optional caption.
 * Alternatively, you can use input_message_content to send a message with
 * the specified content instead of thefile.
 */
export type InlineQueryResultCachedDocument = {};

/**
 * Represents a link to a video file stored on the Telegram servers. By
 * default, this video file will be sent by the user with an optional
 * caption. Alternatively, you can use input_message_content to send a
 * message with the specified content instead of thevideo.
 */
export type InlineQueryResultCachedVideo = {};

/**
 * Represents a link to a voice message stored on the Telegram servers. By
 * default, this voice message will be sent by the user. Alternatively, you
 * can use input_message_content to send a message with the specified
 * content instead of the voicemessage.
 */
export type InlineQueryResultCachedVoice = {};

/**
 * Represents a link to an mp3 audio file stored on the Telegram servers.
 * By default, this audio file will be sent by the user. Alternatively, you
 * can use input_message_content to send a message with the specified
 * content instead of theaudio.
 */
export type InlineQueryResultCachedAudio = {};

/**
 * Represents the content of a text message to be sent as the result of an
 * inline query.
 */
export type InputTextMessageContent = {};

/**
 * Represents the content of a location message to be sent as the result of
 * an inline query.
 */
export type InputLocationMessageContent = {};

/**
 * Represents the content of a venue message to be sent as the result of an
 * inline query.
 */
export type InputVenueMessageContent = {};

/**
 * Represents the content of a contact message to be sent as the result of
 * an inline query.
 */
export type InputContactMessageContent = {};

/**
 * Represents a result of an inline query that was chosen by the user and
 * sent to their chat partner.
 */
export type ChosenInlineResult = {};

/**
 * This object represents a portion of the price for goods orservices.
 */
export type LabeledPrice = {};

/**
 * This object contains basic information about aninvoice.
 */
export type Invoice = {};

/**
 * This object represents a shippingaddress.
 */
export type ShippingAddress = {};

/**
 * This object represents information about anorder.
 */
export type OrderInfo = {};

/**
 * This object represents one shippingoption.
 */
export type ShippingOption = {};

/**
 * This object contains basic information about a successfulpayment.
 */
export type SuccessfulPayment = {};

/**
 * This object contains information about an incoming shippingquery.
 */
export type ShippingQuery = {};

/**
 * This object contains information about an incoming pre-checkoutquery.
 */
export type PreCheckoutQuery = {};

/**
 * This object represents a game. Use BotFather to create and edit games,
 * their short names will act as uniqueidentifiers.
 */
export type Game = {};

/**
 * You can provide an animation for your game so that it looks stylish in
 * chats (check out Lumberjack for an example). This object represents an
 * animation file to be displayed in the message containing agame.
 */
export type Animation = {};

/**
 * This object represents one row of the high scores table for agame.
 */
export type GameHighScore = {};